name: DevSecOps

on:
  workflow_dispatch:

jobs:
  secrets:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v4

      - name: scan secrets with Spectral
        uses: spectralops/spectral-github-action@v5
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines secrets --include-tags base,audit

  IaC:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v4

      - name: scan IaC with Spectral
        uses: spectralops/spectral-github-action@v5
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines iac --include-tags base,azure
  SAST:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v4
      - uses: bearer/bearer-action@v2
        with:
          path: "./src
          skip-rule: javascript_lang_dynamic_regex,javascript_lang_logger_leak

  build:
    needs: [secrets, SCA, SAST]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: build tasks if you need to do any build action
        run: echo "oh yeah"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: mon-app
          path: ./src

  deployToDev:
    needs: [build]
    runs-on: windows-latest
    environment:
      name: "dev"
      url: ${{ steps.deploy-to-webapp-dev.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: mon-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp-dev
        uses: azure/webapps-deploy@v2
        with:
          app-name: "gha-dev"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DEV }}
          package: .

  DAST:
    needs: [deployToDev]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          target: "https://ghactions-dev-gjbyf4c5hhhzgecw.westeurope-01.azurewebsites.net"
          rules_file_name: "devsecops/.zap/rules.tsv"
          cmd_options: "-a"

  LoadTest:
    needs: [deployToDev]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Login to Azure
        uses: azure/login@v2
        continue-on-error: false
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Azure Load Testing"
        uses: azure/load-testing@v1.1.27
        with:
          resourceGroup: "rg-book-gha"
          loadTestConfigFile: "devsecops/.load/loadtest.yaml"
          loadTestResource: "loadtestingbookgha"

  deployToProd:
    needs: [LoadTest, DAST]
    runs-on: ubuntu-latest
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "gha-prd"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PRD}}
          package: .